{"version":3,"sources":["webpack:///./src/components/ui/Timeline/styles.js","webpack:///./src/components/ui/Timeline/index.js","webpack:///./src/components/Experience/index.js","webpack:///./src/components/Education/index.js","webpack:///./src/components/ui/ProgressBar/styles.js","webpack:///./src/components/ui/ProgressBar/index.js","webpack:///./src/components/Skills/styles.js","webpack:///./src/components/Skills/index.js","webpack:///./src/pages/resume.tsx","webpack:///./src/components/utils/FormatHtml/index.js"],"names":["Timeline","styled","div","withConfig","displayName","componentId","Details","Content","Title","Subtitle","Date","Point","span","_ref","title","subtitle","content","startDate","endDate","React","createElement","Styled","Experience","markdownRemark","allMarkdownRemark","useStaticQuery","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","id","html","company","position","node","key","FormatHtml","Education","education","university","degree","ProgressBar","BarWrapper","Bar","percentage","h3","Percentage","Skills","Skill","skills","center","ResumePage","Layout","SEO","className","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-pages-resume-tsx-f1892e698f7c2cbf63b6.js","sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Timeline = styled.div`\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\n\n  &:last-child {\n    ${tw`pb-0`};\n  }\n`;\n\nexport const Details = styled.div`\n  ${tw`w-full sm:w-1/3`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0`};\n`;\n\nexport const Title = styled.div`\n  ${tw`font-semibold mt-3`};\n`;\n\nexport const Subtitle = styled.div`\n  ${tw`text-xs`};\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs border border-pink-500 rounded-full px-2`};\n  width: fit-content;\n`;\n\nexport const Point = styled.span`\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\n  left: -6px;\n  top: 20px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styled from './styles';\n\nconst Timeline = ({ title, subtitle, content, startDate, endDate }) => (\n  <Styled.Timeline>\n    <Styled.Point />\n    <Styled.Details>\n      <Styled.Date>\n        {startDate} - {endDate}\n      </Styled.Date>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\n    </Styled.Details>\n    <Styled.Content>{content}</Styled.Content>\n  </Styled.Timeline>\n);\n\nTimeline.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  content: PropTypes.any.isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired\n};\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nconst Experience = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              company\n              position\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const experiences = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {experiences.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { company, position, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={company}\n            subtitle={position}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nconst Education = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const education = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const ProgressBar = styled.div`\n  ${tw`p-3`};\n`;\n\nexport const BarWrapper = styled.div`\n  ${tw`w-full h-2 bg-gray-300 rounded overflow-hidden mt-1`};\n`;\n\nexport const Bar = styled.div`\n  ${tw`h-2 bg-pink-400`};\n  width: ${({ percentage }) => `${percentage}%`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full flex justify-between`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold`};\n`;\n\nexport const Percentage = styled.h3`\n  ${tw`font-semibold`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as Styled from './styles';\n\nconst ProgressBar = ({ title, percentage }) => (\n  <Styled.ProgressBar>\n    <Styled.Content>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Percentage>{percentage}%</Styled.Percentage>\n    </Styled.Content>\n    <Styled.BarWrapper>\n      <Styled.Bar percentage={percentage} />\n    </Styled.BarWrapper>\n  </Styled.ProgressBar>\n);\n\nProgressBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired\n};\n\nexport default ProgressBar;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Skills = styled.div`\n  ${tw`flex flex-wrap w-full`};\n`;\n\nexport const Skill = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport ProgressBar from 'components/ui/ProgressBar';\n\nimport * as Styled from './styles';\n\nconst Skills = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"skills section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"skills\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              percentage\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle = markdownRemark.frontmatter;\n  const skills = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Skills>\n        {skills.map((item) => {\n          const {\n            id,\n            frontmatter: { title, percentage }\n          } = item.node;\n\n          return (\n            <Styled.Skill key={id}>\n              <ProgressBar title={title} percentage={percentage} />\n            </Styled.Skill>\n          );\n        })}\n      </Styled.Skills>\n    </Container>\n  );\n};\n\nexport default Skills;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Experience from 'components/Experience';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\n\nconst ResumePage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <Experience />\n    <hr />\n    <Education />\n    <hr />\n    <Skills />\n  </Layout>\n);\n\nexport default ResumePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FormatHtml = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nFormatHtml.propTypes = {\n  content: PropTypes.any.isRequired\n};\n\nexport default FormatHtml;\n"],"sourceRoot":""}